body {
    height=100%;
    width=100%;
    background:black;
    color:white;
    font-family: sans-serif;
    margin: 0;
}

h2 {
  font-size: 16px;
  padding: 4px;
  margin: 0px;
}

h3 {
  font-size: 14px;
  margin: 0px;
}

.tabs {
    --tabLabelHeight: 30px;
    --tabLabelWidth: 100px;
    --tabBorderWidth: 1px;

    /* the tab labels are anchored here. */
    position: relative;
    /* shift the tab content down by the height of the labels, minus one border width. */
    padding-top: calc(var(--tabLabelHeight) - var(--tabBorderWidth));
}

.tabs > input {
    display: none;
    position: fixed;
}

.tabs > label {
    /* add the border width to the width to prevent "double" borders between adjacent labels */
    width: calc(var(--tabLabelWidth) + var(--tabBorderWidth));
    height: var(--tabLabelHeight);
    line-height: var(--tabLabelHeight);
    overflow: hidden;
    font-weight: bold;
    text-align: center;

    /* this is the tab separator */
    border: var(--tabBorderWidth) solid black;
    box-sizing: border-box;

    /* position tab labels relative to the container. */
    position: absolute;
    top: 0;
}

.tab0 { left: calc(var(--tabLabelWidth) * 0); }
.tab1 { left: calc(var(--tabLabelWidth) * 1); }
.tab2 { left: calc(var(--tabLabelWidth) * 2); }
.tab3 { left: calc(var(--tabLabelWidth) * 3); }
.tab4 { left: calc(var(--tabLabelWidth) * 4); }
.tab5 { left: calc(var(--tabLabelWidth) * 5); }

.tabs > label:hover {
    cursor: pointer;
    background-color: #111;
    -webkit-transition: .2s;
    transition: background-color .2s;
}

.tabs > input:checked + label {
    background-color: #222;
    border-bottom-style: none;
}

.tabs > div {
    background-color: #222;
    padding: 1em;
    border: var(--tabBorderWidth) solid black;
    padding: 0;
    padding-top: 5px;
}

.tabs > div > div {
  background-color:#111;
  font-size: 14px;
  margin: 4px;
  display: inline-block;
  float:top;
}

.tabs > input:not(:checked) + label + div {
    display: none;
    position: fixed;
}



.scene {
  background-color: #333;
  color: #fff;
  margin: 0;
  padding: 4px;
  width: 180px;
  height: 50px;
	display:inline-block;
	cursor:pointer;
	border:1px solid #111;
}

.scene:hover {
  background-color: #111;
  -webkit-transition: .2s;
  transition: background-color .2s;
}

.scene:active {
  background-color: #222;
  position:relative;
  top:1px;
}

.devices {
  display: block !important;
}
.device {
  font-size: 14px;
  min-width: 130px;
}

.statusLight {
  height: 17px;
}

.statusLight#offline {
  background: #300;
}

.statusLight#opening {
  background: #950;
}

.statusLight#opening:after,.statusLight#tx:after,.statusLight#rx:after {
  position: relative;
  top:0px;
  left:5px;
  content: "";
  display: inline-block;
  width: 9px;
  height: 9px;
  margin: 0;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: #fff transparent #fff transparent;
  animation: anim 1.337s linear infinite;
}

@keyframes anim {
  0% {
    transform: rotate(55deg);
    opacity: 1;
  }
  30% {
    transform: rotate(1337deg);
    opacity: 0;
  }
  100% {
    transform: rotate(360deg);
    opacity: 1;
  }
}

.statusLight#online {
  background: #080;
}

.statusLight#tx {
  background: #0b8 !important;
}

.statusLight#rx {
  background: #088;
}

.statusLight#rx:after {
  transform: rotate(0deg) !important;
}

.slider {
    -webkit-appearance: slider-vertical;
    writing-mode: bt-lr;
    width: 30px;
    height: 200px;
    background: black;
    outline: none;
    opacity: 0.8;
    -webkit-transition: .2s;
    transition: opacity .2s;
    margin: 0;
}

.slider:hover {
    opacity: 1;
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default look */
    appearance: none;
    outline: none;
    width: 30px;
    height: 10px;
    background: #333;
    cursor: pointer;
}

.slider::-moz-range-thumb {
    outline: none;
    width: 30px;
    height: 10px;
    background: #333;
    cursor: pointer;
}

#debug {

}

.hidden {
    display: none !important;
}
